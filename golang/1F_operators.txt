##Operators

# Logical

&&
||
!

# Comparison

==
!=
<
<=
>
>=

# Assignment

:=
=
+=
-=

# Increment, Decrement

++
--

Note that these form statements, not expressions.
So i++ is valid as an entire statement, but x := i++ is not valid.

# Blank Identifier _

AKA Write-Only Variable

Accept a value that you do not use - avoid compiler errors
<code>
a, _ := returnMultipleValues()

for _, v := range myCollection {
}
</code>

# Spread ...

Convert a collection into a series of arguments.

<code>
users = append(users[:i], users[i+1:]...) //remove one element from a slice

numbers := []int{1, 2, 3}
fmt.Println(numbers...)
</code>
