##Equality

To enable equality comparisons in a custom object:
<code>
/// <duplicate cref="Equals(object)" />
public static bool operator ==(DotNetQualifiedName a, DotNetQualifiedName b)
{
	if(object.ReferenceEquals(a, null) && object.ReferenceEquals(b, null))
		return true;
	if(object.ReferenceEquals(a, null) || object.ReferenceEquals(b, null))
		return false;
	return a.Equals(b);
}

/// <duplicate cref="Equals(object)" />
public static bool operator !=(DotNetQualifiedName a, DotNetQualifiedName b)
{
	if(object.ReferenceEquals(a, null) && object.ReferenceEquals(b, null))
		return false;
	if(object.ReferenceEquals(a, null) || object.ReferenceEquals(b, null))
		return true;
	return !a.Equals(b);
}

/// <summary>Names converted to strings must match exactly to be considered equal.</summary>
public override bool Equals(Object b)
{
	if(!(b is DotNetQualifiedName))
		return false;
	if(object.ReferenceEquals(this, null) && object.ReferenceEquals(b, null))
		return true;
	if(object.ReferenceEquals(this, null) || object.ReferenceEquals(b, null))
		return false;

	DotNetQualifiedName other = (b as DotNetQualifiedName);
	return (this.LocalName == other.LocalName && this.FullNamespace == other.FullNamespace);
}

/// <summary></summary>
public override int GetHashCode()
{
	if(FullNamespace == null) return LocalName.GetHashCode();
	return LocalName.GetHashCode() ^ FullNamespace.GetHashCode();
}

/// <summary>
/// Names are sorted alphabetically, per namespace, starting with the root.
/// </summary>
public int CompareTo(object b)
{
	if(!(b is DotNetQualifiedName))
		return -1;
	if(this.Equals(b))
		return 0;
	if(object.ReferenceEquals(this, null))
		return -1;
	if(object.ReferenceEquals(b, null))
		return 1;

	DotNetQualifiedName other = (b as DotNetQualifiedName);
	int namespaceComparer = this.FullNamespace.CompareTo(other.FullNamespace);
	if(namespaceComparer != 0)
		return namespaceComparer;
	return this.LocalName.CompareTo(other.LocalName);
}
</code>

To avoid infinite recursion, use this method of checking for null values:
<code>
//use this
if (object.ReferenceEquals(myObject, null))

//instead of this
if(myObject == null)
</code>