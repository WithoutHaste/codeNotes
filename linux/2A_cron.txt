##Cron

Cron is for scheduling recurring tasks.

#crond

The crond daemon is the background service that enables cron.
Crond checks for jobs in these locations:
- /var/spool/cron (individual user jobs)
- /etc/cron.d (service and application jobs)
- /etc/anacrontab (special case: service and application jobs)

#crontab

Open cron job editor:
<code>
crontab -e FileName
</code>
When you save and exit, the crond daemon is restarted and will see your updates.

Crontab uses Vi as its editor.

By default, cron jobs are run as the user who created them.

#cron file

Example of structure:
<code>
# Setup default environment that these scheduled commands will run in
SHELL=/bin/bash
MAILTO=root@example.com
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin

# For details see "crontab man"

# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name  command-to-be-executed

# backup using the rsbu program to the internal 4TB HDD and then 4TB external
01 01 * * * /usr/local/bin/rsbu -vbd1 ; /usr/local/bin/rsbu -vbd2

# Set the hardware clock to keep it in sync with the more accurate system clock
03 05 * * * /sbin/hwclock --systohc

# Perform monthly updates on the first of the month
# 25 04 1 * * /usr/bin/dnf -y update
</code>

MAILTO sets where the results of the cron job will be sent.
Results will include the output you'd see if you ran the command manually.

Even when you set the PATH, it is recommended to still give the fully qualified path to each command.

Note that semicolon (;) is used to separate multiple commands.

You can leave any/all time specifications as *.

You can list time specifications:
<code>
# Run quarterly reports
02 03 1 1,4,7,10 * /usr/local/bin/reports.sh
</code>

You can use a range:
<code>
# Remind me each hour of the work-day
01 09-17 * * * /usr/local/bin/hourlyreminder.sh
</code>

You can run every x-th time-unit:
<code>
# Run every 5 minutes, but only during even-numbered hours between 8am and 6pm
*/5 08-18/2 * * * /usr/local/bin/mycronjob.sh
</code>
The division must have a remainder of 0.

#anacron

anacron will run tasks that were skipped because the computer was off or too busy.

Missed jobs will be ran only once - not as many times as were missed.