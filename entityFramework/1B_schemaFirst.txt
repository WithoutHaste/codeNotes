##Schema First

Starting with an existing database:

#EDMX Model

1) In an empty class library project > add New Item > add an ADO.NET Entity Data Model
2) select "EF Designer from database"
3) select the existing database
4) select with database tables/views/procedures/etc to include in the model

You will see the generated model in the designer.

In the project, you'll see 2 T4 templates. These templates generate your Domain classes and DbContext class based on the EDMX model.
These generated classes are always Partial Classes, so you are free to extend them in another file.

#Code Model

(EF 6)

1) In an empty class library project > add New Item > add an ADO.NET Entity Data Model
2) select "Code First from database"
3) select the existing database
4) select with database tables/views to include in the model
 - stored procedures cannot be included here, they must be configured manually
 
You will see all the generated classes in the project. This was a one-time generation, so there are no T4 templates.
You'll also have the generated DbContext. 

You can alter how the classes are generated by editing the Context.cs.t4 and EntityType.cs.t4 files. For instance, you could have it generate all configuration in the DbContext class, instead of using Data Annotations on the Entities. 

By default, every configuration will be generated, ever those that would are implicit by convention (such as a database column name that matches the class property name). That add safety for if the property name is changed at some point.
