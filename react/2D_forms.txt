##Controlled Components

HTML elements "input", "textarea", and "select" usually maintain their own state.
But React expects all state to maintained internally.

Controlled components are these HTML elements where React controls the state.

#Form

<code>
const submit = (e) => {
	e.preventDefault();
	//submit form data to api
};

return (
	<form onSubmit={submit}>
	</form>
);
</code>

#Input

<code>
const [firstName, setFirstName] = useState("Susan");

return (
	<input type='text' value={firstName} 
	onChange={(e) => setFirstName(e.target.value)}/>
);
</code>

more complicated example
<code>
const [person, setPerson] = useState({ firstName: 'Susan', lastName: 'Smith' });
const change = ((e) => setPerson({...person, [e.target.name]: e.target.value });

return (
	<form>
		<input type='text' name='firstName' value={person.firstName} onChange={change} />
		<input type='text' name='lastName' value={person.lastName} onChange={change} />
	</form>
);
</code>
Computed Property Name: this part "[e.target.name]: e.target.value"

#TextArea

React's textarea component makes textarea similar to input.
<code>
	<textarea value={val} onChange={change} />
</code>

#Select

React's select component makes select similar to input.
<code>
	<select value={val} onChange={change} >
		<option value='option 1'>1</option>
	</select>
</code>
